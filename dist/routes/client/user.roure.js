"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.userRouter = void 0;
const express_1 = require("express");
const userController_1 = require("../../controllers/userController");
const authMiddleware_1 = require("../../middlewares/authMiddleware");
const auth_validator_1 = require("../../validators/auth.validator");
const router = (0, express_1.Router)();
router.post('/login', auth_validator_1.authValidators.loginValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.login);
router.post('/register', auth_validator_1.authValidators.registerValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.register);
router.post('/change-password', authMiddleware_1.AuthMiddleware.isAuthorized, auth_validator_1.authValidators.changePasswordValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.changePassword);
router.post('/change-profile', authMiddleware_1.AuthMiddleware.isAuthorized, auth_validator_1.authValidators.changeProfileValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.changeProfile);
router.post('/send-otp', auth_validator_1.authValidators.sendOtpValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.sendOtp);
router.post('/verify-otp', auth_validator_1.authValidators.verifyOtpValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.verifyOtp);
router.post('/reset-password', auth_validator_1.authValidators.resetPasswordValidator, authMiddleware_1.AuthMiddleware.validateRequest, userController_1.UserController.resetPassword);
router.put('/refresh-token', userController_1.UserController.refreshToken);
exports.userRouter = router;
